name: Create Release With Binary Assets
on:
  push:
    tags:
      - v*

jobs:
  release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ github.ref }} Release
          draft: true
          prerelease: false
      - name: Output Release URL File
        run: echo ${{ steps.create_release.outputs.upload_url }} > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v3.1.0
        with:
          name: release_url
          path: release_url.txt

  publish:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rid: [linux-x64, linux-arm64]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2.4.2
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v3.0.0
        with:
          name: release_url
      - name: Setup .NET Core 3.0 (current)
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: 6.x
      - name: Publish Binaries
        working-directory: src/Server
        run: |
          dotnet publish ./InverterMon.Server.csproj -c Release -r ${{ matrix.rid }} --self-contained -o ./bin/${{ matrix.rid }}
          zip -r ${{ matrix.rid }} ./bin/${{ matrix.rid }}
      - name: Get Release File Name & Upload URL
        id: get_release_info
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}
        run: |
          echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v}
          value=`cat release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./bin/${{ matrix.rid }}.zip
          asset_name: ${{ steps.get_release_info.outputs.file_name }}-${{ matrix.rid }}.zip
          asset_content_type: application/zip
